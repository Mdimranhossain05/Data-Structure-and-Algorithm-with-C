#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node *left, *right;
};

struct node *newNode(int val){
    struct node *newNode = (struct node*) malloc(sizeof(struct node));
    newNode->data = val;
    newNode->left = NULL;
    newNode->right = NULL;
    
    return newNode;
}

struct node *insert(struct node *node, int val){
    if (node == NULL) return newNode(val);
    
    if (val < node->data){
        node->left = insert(node->left, val);
    }
    else{
        node->right = insert(node->right, val);
    }
    return node;
}

struct node *inorderPredecessor(struct node *node){
    struct node *curr = node;
    while (curr && curr->left){
        curr->left;
    }
    return curr;
}

void inOrderTraversal(struct node *node){
    if (node == NULL) return;
    inOrderTraversal(node->left);
    printf("%d->",node->data);
    inOrderTraversal(node->right);
}

struct node *deleteNode(struct node *node,int data){
    if (node == NULL) return NULL;
    
    if (data < node->data){
        node->left = deleteNode(node->left, data);
    }
    else if (data > node->data){
        node->right = deleteNode(node->right, data);
    }
    else{
        if(node->left == NULL){
            struct node *tmp = node->right;
            free(node);
            return tmp;
        }else if(node->right == NULL){
            struct node *tmp = node->left;
            free(node);
            return tmp;
        }
        
        struct node *iPre = inorderPredecessor(node->right);
        
        node->data = iPre->data;
        
        node->right = deleteNode(node->right,iPre->data);
        
    }
    return node;
}


int main()
{
    struct node *head = NULL;
    int data;
    printf("Enter -100 to stop insertion\n");
    printf("Enter data to insert: ");
    scanf("%d",&data);
    while (data != -100){
        head = insert(head, data);
        printf("Enter data to insert: ");
        scanf("%d",&data);
    }
    inOrderTraversal(head);
    
    int del;
    printf("\nEnter -100 to stop deletion\n");
    printf("Enter data to delete: ");
    scanf("%d",&del);
    while (del != -100){
        head = deleteNode(head, del);
        inOrderTraversal(head);
        printf("\nEnter data to insert: ");
        scanf("%d",&del);
    }
    
    printf("Program Finished");
    
    
    return 0;
}


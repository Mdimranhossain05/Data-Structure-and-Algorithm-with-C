#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node *next;
};
struct node *front = 0;
struct node *rear = 0;
void enqueue(int x){
    struct node *newNode = (struct node*)malloc(sizeof(struct node));
    newNode->data = x;
    newNode->next = 0;
    if (rear ==0){
        front = rear = newNode;
        rear->next = front;
    }else{
        rear->next = newNode;
        rear = newNode;
        rear->next = front;
    }
}

void dequeue(){
    struct node *temp;
    if (front == 0 && rear == 0){
        printf("Empty queue\n");
    }else if(front == rear){
        temp = front;
        printf("Dequed data: %d\n",temp->data);
        free(temp);
        front = rear = 0;
    }else{
        temp = front;
        front = front->next;
        rear->next = front;
        printf("Dequed data: %d\n",temp->data);
        free(temp);
    }
}

void display(){
    if(front == 0 && rear==0){
        printf("Empty Queue\n");
    }else{
        struct node *newNode = front;
        printf("Queue: ");
        while(newNode != rear){
            printf("%d, ",newNode->data);
            newNode = newNode->next;
        }printf("%d \n",newNode->data);
    }
}

void peek(){
    
    if(front == 0 && rear == 0){
        printf("Empty Queue\n");
    }else{
    printf("Front data: %d",front->data);
    }
}

int main()
{
    dequeue();
    enqueue(1);
    dequeue();
    display();
    enqueue(2);
    enqueue(3);
    enqueue(4);
    enqueue(5);
    display();
    dequeue();
    dequeue();
    dequeue();
    dequeue();
    dequeue();
    display();
    enqueue(1);
    enqueue(2);
    enqueue(3);
    display();
    peek();

    return 0;
}

